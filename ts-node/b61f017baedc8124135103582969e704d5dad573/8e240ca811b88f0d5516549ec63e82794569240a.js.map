{"version":3,"file":"/home/admin/Programmi/resourceManagement/AISMfrontend/tools/config/seed.config.ts","sources":["/home/admin/Programmi/resourceManagement/AISMfrontend/tools/config/seed.config.ts"],"names":[],"mappings":"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","sourcesContent":["import { join } from 'path';\r\nimport * as slash from 'slash';\r\nimport { argv } from 'yargs';\r\n\r\nimport { Environments, InjectableDependency } from './seed.config.interfaces';\r\n\r\n/**\r\n * The enumeration of available environments.\r\n * @type {Environments}\r\n */\r\nexport const ENVIRONMENTS: Environments = {\r\n  DEVELOPMENT: 'dev',\r\n  PRODUCTION: 'prod'\r\n};\r\n\r\n/**\r\n * This class represents the basic configuration of the seed.\r\n * It provides the following:\r\n * - Constants for directories, ports, versions etc.\r\n * - Injectable NPM dependencies\r\n * - Injectable application assets\r\n * - Temporary editor files to be ignored by the watcher and asset builder\r\n * - SystemJS configuration\r\n * - Autoprefixer configuration\r\n * - BrowserSync configuration\r\n * - Utilities\r\n */\r\nexport class SeedConfig {\r\n\r\n  /**\r\n   * The port where the application will run.\r\n   * The default port is `5555`, which can be overriden by the  `--port` flag when running `npm start`.\r\n   * @type {number}\r\n   */\r\n  PORT = argv['port'] || 5555;\r\n\r\n  /**\r\n   * The root folder of the project (up two levels from the current directory).\r\n   */\r\n  PROJECT_ROOT = join(__dirname, '../..');\r\n\r\n  /**\r\n   * The current environment.\r\n   * The default environment is `dev`, which can be overriden by the `--config-env ENV_NAME` flag when running `npm start`.\r\n   */\r\n  ENV = getEnvironment();\r\n\r\n  /**\r\n   * The flag for the debug option of the application.\r\n   * The default value is `false`, which can be overriden by the `--debug` flag when running `npm start`.\r\n   * @type {boolean}\r\n   */\r\n  DEBUG = argv['debug'] || false;\r\n\r\n  /**\r\n   * The port where the documentation application will run.\r\n   * The default docs port is `4003`, which can be overriden by the `--docs-port` flag when running `npm start`.\r\n   * @type {number}\r\n   */\r\n  DOCS_PORT = argv['docs-port'] || 4003;\r\n\r\n  /**\r\n   * The port where the unit test coverage report application will run.\r\n   * The default coverage port is `4004`, which can by overriden by the `--coverage-port` flag when running `npm start`.\r\n   * @type {number}\r\n   */\r\n  COVERAGE_PORT = argv['coverage-port'] || 4004;\r\n\r\n  /**\r\n  * The path to the coverage output\r\n  * NB: this must match what is configured in ./karma.conf.js\r\n  */\r\n  COVERAGE_DIR = 'coverage';\r\n\r\n  /**\r\n   * The path for the base of the application at runtime.\r\n   * The default path is based on the environment '/',\r\n   * which can be overriden by the `--base` flag when running `npm start`.\r\n   * @type {string}\r\n   */\r\n  APP_BASE = argv['base'] || '/';\r\n\r\n  /**\r\n   * The base path of node modules.\r\n   * @type {string}\r\n   */\r\n  NPM_BASE = slash(join(this.APP_BASE, 'node_modules/'));\r\n\r\n  /**\r\n   * The flag for the hot-loader option of the application.\r\n   * Per default the option is not set, but can be set by the `--hot-loader` flag when running `npm start`.\r\n   * @type {boolean}\r\n   */\r\n  ENABLE_HOT_LOADING = argv['hot-loader'];\r\n\r\n  /**\r\n   * The port where the application will run, if the `hot-loader` option mode is used.\r\n   * The default hot-loader port is `5578`.\r\n   * @type {number}\r\n   */\r\n  HOT_LOADER_PORT = 5578;\r\n\r\n  /**\r\n   * The build interval which will force the TypeScript compiler to perform a typed compile run.\r\n   * Between the typed runs, a typeless compile is run, which is typically much faster.\r\n   * For example, if set to 5, the initial compile will be typed, followed by 5 typeless runs,\r\n   * then another typed run, and so on.\r\n   * If a compile error is encountered, the build will use typed compilation until the error is resolved.\r\n   * The default value is `0`, meaning typed compilation will always be performed.\r\n   * @type {number}\r\n   */\r\n  TYPED_COMPILE_INTERVAL = 0;\r\n\r\n  /**\r\n   * The directory where the bootstrap file is located.\r\n   * The default directory is `app`.\r\n   * @type {string}\r\n   */\r\n  BOOTSTRAP_DIR = argv['app'] || 'app';\r\n\r\n  /**\r\n   * The directory where the client files are located.\r\n   * The default directory is `client`.\r\n   * @type {string}\r\n   */\r\n  APP_CLIENT = argv['client'] || 'client';\r\n\r\n  /**\r\n   * The bootstrap file to be used to boot the application. The file to be used is dependent if the hot-loader option is\r\n   * used or not.\r\n   * Per default (non hot-loader mode) the `main.ts` file will be used, with the hot-loader option enabled, the\r\n   * `hot_loader_main.ts` file will be used.\r\n   * @type {string}\r\n   */\r\n  BOOTSTRAP_MODULE = `${this.BOOTSTRAP_DIR}/` + (this.ENABLE_HOT_LOADING ? 'hot_loader_main' : 'main');\r\n\r\n  BOOTSTRAP_PROD_MODULE = `${this.BOOTSTRAP_DIR}/` + 'main';\r\n\r\n  NG_FACTORY_FILE = 'main-prod';\r\n\r\n  BOOTSTRAP_FACTORY_PROD_MODULE = `${this.BOOTSTRAP_DIR}/${this.NG_FACTORY_FILE}`;\r\n  /**\r\n   * The default title of the application as used in the `<title>` tag of the\r\n   * `index.html`.\r\n   * @type {string}\r\n   */\r\n  APP_TITLE = 'Service Line Application Management';\r\n\r\n  /**\r\n   * The base folder of the applications source files.\r\n   * @type {string}\r\n   */\r\n  APP_SRC = `src/${this.APP_CLIENT}`;\r\n\r\n  /**\r\n   * The folder of the applications asset files.\r\n   * @type {string}\r\n   */\r\n  ASSETS_SRC = `${this.APP_SRC}/assets`;\r\n\r\n  /**\r\n   * The folder of the applications css files.\r\n   * @type {string}\r\n   */\r\n  CSS_SRC = `${this.APP_SRC}/assets/sass`;\r\n\r\n  /**\r\n   * The directory of the applications tools\r\n   * @type {string}\r\n   */\r\n  TOOLS_DIR = 'tools';\r\n\r\n  /**\r\n   * The directory of the tasks provided by the seed.\r\n   */\r\n  SEED_TASKS_DIR = join(process.cwd(), this.TOOLS_DIR, 'tasks', 'seed');\r\n\r\n  /**\r\n   * The destination folder for the generated documentation.\r\n   * @type {string}\r\n   */\r\n  DOCS_DEST = 'docs';\r\n\r\n  /**\r\n   * The base folder for built files.\r\n   * @type {string}\r\n   */\r\n  DIST_DIR = 'dist';\r\n\r\n  /**\r\n   * The folder for built files in the `dev` environment.\r\n   * @type {string}\r\n   */\r\n  DEV_DEST = `${this.DIST_DIR}/dev`;\r\n\r\n  /**\r\n   * The folder for the built files in the `prod` environment.\r\n   * @type {string}\r\n   */\r\n  PROD_DEST = `${this.DIST_DIR}/prod`;\r\n\r\n  /**\r\n   * The folder for temporary files.\r\n   * @type {string}\r\n   */\r\n  TMP_DIR = `${this.DIST_DIR}/tmp`;\r\n\r\n  /**\r\n   * The folder for the built files, corresponding to the current environment.\r\n   * @type {string}\r\n   */\r\n  APP_DEST = this.ENV === ENVIRONMENTS.DEVELOPMENT ? this.DEV_DEST : this.PROD_DEST;\r\n\r\n  /**\r\n   * The folder for the built CSS files.\r\n   * @type {strings}\r\n   */\r\n  CSS_DEST = `${this.APP_DEST}/css`;\r\n\r\n  /**\r\n   * The folder for the built JavaScript files.\r\n   * @type {string}\r\n   */\r\n  JS_DEST = `${this.APP_DEST}/js`;\r\n\r\n  /**\r\n   * The version of the application as defined in the `package.json`.\r\n   */\r\n  VERSION = appVersion();\r\n\r\n  /**\r\n   * The name of the bundle file to includes all CSS files.\r\n   * @type {string}\r\n   */\r\n  CSS_PROD_BUNDLE = 'main.css';\r\n\r\n  /**\r\n   * The name of the bundle file to include all JavaScript shims.\r\n   * @type {string}\r\n   */\r\n  JS_PROD_SHIMS_BUNDLE = 'shims.js';\r\n\r\n  /**\r\n   * The name of the bundle file to include all JavaScript application files.\r\n   * @type {string}\r\n   */\r\n  JS_PROD_APP_BUNDLE = 'app.js';\r\n\r\n  /**\r\n   * The required NPM version to run the application.\r\n   * @type {string}\r\n   */\r\n  VERSION_NPM = '2.14.2';\r\n\r\n  /**\r\n   * The required NodeJS version to run the application.\r\n   * @type {string}\r\n   */\r\n  VERSION_NODE = '4.0.0';\r\n\r\n  /**\r\n   * The ruleset to be used by `codelyzer` for linting the TypeScript files.\r\n   */\r\n  CODELYZER_RULES = customRules();\r\n\r\n  /**\r\n   * The flag to enable handling of SCSS files\r\n   * The default value is false. Override with the '--scss' flag.\r\n   * @type {boolean}\r\n   */\r\n  ENABLE_SCSS = argv['scss'] || true;\r\n\r\n  /**\r\n   * The list of NPM dependcies to be injected in the `index.html`.\r\n   * @type {InjectableDependency[]}\r\n   */\r\n  NPM_DEPENDENCIES: InjectableDependency[] = [\r\n    { src: 'zone.js/dist/zone.js', inject: 'libs' },\r\n    { src: 'core-js/client/shim.min.js', inject: 'shims' },\r\n    { src: 'systemjs/dist/system.src.js', inject: 'shims', env: ENVIRONMENTS.DEVELOPMENT },\r\n    { src: 'rxjs/bundles/Rx.min.js', inject: 'libs', env: ENVIRONMENTS.DEVELOPMENT },\r\n  ];\r\n\r\n  /**\r\n   * The list of local files to be injected in the `index.html`.\r\n   * @type {InjectableDependency[]}\r\n   */\r\n  APP_ASSETS: InjectableDependency[] = [\r\n    // { src: `${this.CSS_SRC}/main.${this.getInjectableStyleExtension()}`, inject: true, vendor: false },\r\n  ];\r\n\r\n  /**\r\n   * The list of editor temporary files to ignore in watcher and asset builder.\r\n   * @type {string[]}\r\n   */\r\n  TEMP_FILES: string[] = [\r\n    '**/*___jb_tmp___',\r\n    '**/*~',\r\n  ];\r\n\r\n  /**\r\n   * Returns the array of injectable dependencies (npm dependencies and assets).\r\n   * @return {InjectableDependency[]} The array of npm dependencies and assets.\r\n   */\r\n  get DEPENDENCIES(): InjectableDependency[] {\r\n    return normalizeDependencies(this.NPM_DEPENDENCIES.filter(filterDependency.bind(null, this.ENV)))\r\n      .concat(this.APP_ASSETS.filter(filterDependency.bind(null, this.ENV)));\r\n  }\r\n\r\n  /**\r\n   * The configuration of SystemJS for the `dev` environment.\r\n   * @type {any}\r\n   */\r\n  SYSTEM_CONFIG_DEV: any = {\r\n    defaultJSExtensions: true,\r\n    packageConfigPaths: [\r\n      `/node_modules/*/package.json`,\r\n      `/node_modules/**/package.json`,\r\n      `/node_modules/@angular/*/package.json`\r\n    ],\r\n    paths: {\r\n      [this.BOOTSTRAP_MODULE]: `${this.APP_BASE}${this.BOOTSTRAP_MODULE}`,\r\n      '@angular/common': 'node_modules/@angular/common/bundles/common.umd.js',\r\n      '@angular/compiler': 'node_modules/@angular/compiler/bundles/compiler.umd.js',\r\n      '@angular/core': 'node_modules/@angular/core/bundles/core.umd.js',\r\n      '@angular/forms': 'node_modules/@angular/forms/bundles/forms.umd.js',\r\n      '@angular/http': 'node_modules/@angular/http/bundles/http.umd.js',\r\n      '@angular/platform-browser': 'node_modules/@angular/platform-browser/bundles/platform-browser.umd.js',\r\n      '@angular/platform-browser-dynamic': 'node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\r\n      '@angular/router': 'node_modules/@angular/router/bundles/router.umd.js',\r\n\r\n      '@angular/common/testing': 'node_modules/@angular/common/bundles/common-testing.umd.js',\r\n      '@angular/compiler/testing': 'node_modules/@angular/compiler/bundles/compiler-testing.umd.js',\r\n      '@angular/core/testing': 'node_modules/@angular/core/bundles/core-testing.umd.js',\r\n      '@angular/http/testing': 'node_modules/@angular/http/bundles/http-testing.umd.js',\r\n      '@angular/platform-browser/testing':\r\n      'node_modules/@angular/platform-browser/bundles/platform-browser-testing.umd.js',\r\n      '@angular/platform-browser-dynamic/testing':\r\n      'node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic-testing.umd.js',\r\n      '@angular/router/testing': 'node_modules/@angular/router/bundles/router-testing.umd.js',\r\n\r\n      'rxjs/*': 'node_modules/rxjs/*',\r\n      'app/*': '/app/*',\r\n      // For test config\r\n      'dist/dev/*': '/base/dist/dev/*',\r\n      '*': 'node_modules/*'\r\n    },\r\n    packages: {\r\n      rxjs: { defaultExtension: 'js' }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * The configuration of SystemJS of the application.\r\n   * Per default, the configuration of the `dev` environment will be used.\r\n   * @type {any}\r\n   */\r\n  SYSTEM_CONFIG: any = this.SYSTEM_CONFIG_DEV;\r\n\r\n  /**\r\n   * The system builder configuration of the application.\r\n   * @type {any}\r\n   */\r\n  SYSTEM_BUILDER_CONFIG: any = {\r\n    defaultJSExtensions: true,\r\n    base: this.PROJECT_ROOT,\r\n    packageConfigPaths: [\r\n      join('node_modules', '*', 'package.json'),\r\n      join('node_modules', '@angular', '*', 'package.json')\r\n    ],\r\n    paths: {\r\n      [join(this.TMP_DIR, 'app', '*')]: `${this.TMP_DIR}/app/*`,\r\n      '*': 'node_modules/*'\r\n    },\r\n    packages: {\r\n      '@angular/common': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/compiler': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/core/testing': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/core': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/forms': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/http': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/platform-browser': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/platform-browser-dynamic': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      '@angular/router': {\r\n        main: 'index.js',\r\n        defaultExtension: 'js'\r\n      },\r\n      'rxjs': {\r\n        main: 'Rx.js',\r\n        defaultExtension: 'js'\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * The Autoprefixer configuration for the application.\r\n   * @type {Array}\r\n   */\r\n  BROWSER_LIST = [\r\n    'ie >= 10',\r\n    'ie_mob >= 10',\r\n    'ff >= 30',\r\n    'chrome >= 34',\r\n    'safari >= 7',\r\n    'opera >= 23',\r\n    'ios >= 7',\r\n    'android >= 4.4',\r\n    'bb >= 10'\r\n  ];\r\n\r\n  /**\r\n   * White list for CSS color guard\r\n   * @type {[string, string][]}\r\n   */\r\n  COLOR_GUARD_WHITE_LIST: [string, string][] = [\r\n  ];\r\n\r\n  /**\r\n   * Configurations for NPM module configurations. Add to or override in project.config.ts.\r\n   * If you like, use the mergeObject() method to assist with this.\r\n   */\r\n  PLUGIN_CONFIGS: any = {\r\n    /**\r\n     * The BrowserSync configuration of the application.\r\n     * The default open behavior is to open the browser. To prevent the browser from opening use the `--b`  flag when\r\n     * running `npm start` (tested with serve.dev).\r\n     * Example: `npm start -- --b`\r\n     * @type {any}\r\n     */\r\n    'browser-sync': {\r\n      middleware: [require('connect-history-api-fallback')({\r\n        index: `${this.APP_BASE}index.html`\r\n      })],\r\n      port: this.PORT,\r\n      startPath: this.APP_BASE,\r\n      open: argv['b'] ? false : true,\r\n      injectChanges: false,\r\n      server: {\r\n        baseDir: `${this.DIST_DIR}/empty/`,\r\n        routes: {\r\n          [`${this.APP_BASE}${this.APP_SRC}`]: this.APP_SRC,\r\n          [`${this.APP_BASE}${this.APP_DEST}`]: this.APP_DEST,\r\n          [`${this.APP_BASE}node_modules`]: 'node_modules',\r\n          [`${this.APP_BASE.replace(/\\/$/, '')}`]: this.APP_DEST\r\n        }\r\n      }\r\n    },\r\n\r\n    // Note: you can customize the location of the file\r\n    'environment-config': join(this.PROJECT_ROOT, this.TOOLS_DIR, 'env'),\r\n\r\n    /**\r\n     * The options to pass to gulp-sass (and then to node-sass).\r\n     * Reference: https://github.com/sass/node-sass#options\r\n     * @type {object}\r\n     */\r\n    'gulp-sass': {\r\n      includePaths: ['./node_modules/']\r\n    },\r\n\r\n    /**\r\n     * The options to pass to gulp-concat-css\r\n     * Reference: https://github.com/mariocasciaro/gulp-concat-css\r\n     * @type {object}\r\n     */\r\n    'gulp-concat-css': {\r\n      targetFile: this.CSS_PROD_BUNDLE,\r\n      options: {\r\n        rebaseUrls: false\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Recursively merge source onto target.\r\n   * @param {any} target The target object (to receive values from source)\r\n   * @param {any} source The source object (to be merged onto target)\r\n   */\r\n  mergeObject(target: any, source: any) {\r\n    const deepExtend = require('deep-extend');\r\n    deepExtend(target, source);\r\n  }\r\n\r\n  /**\r\n   * Locate a plugin configuration object by plugin key.\r\n   * @param {any} pluginKey The object key to look up in PLUGIN_CONFIGS.\r\n   */\r\n  getPluginConfig(pluginKey: string): any {\r\n    if (this.PLUGIN_CONFIGS[pluginKey]) {\r\n      return this.PLUGIN_CONFIGS[pluginKey];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getInjectableStyleExtension() {\r\n    return this.ENV === ENVIRONMENTS.PRODUCTION && this.ENABLE_SCSS ? 'scss' : 'css';\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Normalizes the given `deps` to skip globs.\r\n * @param {InjectableDependency[]} deps - The dependencies to be normalized.\r\n */\r\nexport function normalizeDependencies(deps: InjectableDependency[]) {\r\n  deps\r\n    .filter((d: InjectableDependency) => !/\\*/.test(d.src)) // Skip globs\r\n    .forEach((d: InjectableDependency) => d.src = require.resolve(d.src));\r\n  return deps;\r\n}\r\n\r\n/**\r\n * Returns if the given dependency is used in the given environment.\r\n * @param  {string}               env - The environment to be filtered for.\r\n * @param  {InjectableDependency} d   - The dependency to check.\r\n * @return {boolean}                    `true` if the dependency is used in this environment, `false` otherwise.\r\n */\r\nfunction filterDependency(env: string, d: InjectableDependency): boolean {\r\n  if (!d.env) {\r\n    d.env = Object.keys(ENVIRONMENTS).map(k => ENVIRONMENTS[k]);\r\n  }\r\n  if (!(d.env instanceof Array)) {\r\n    (<any>d).env = [d.env];\r\n  }\r\n  return d.env.indexOf(env) >= 0;\r\n}\r\n\r\n/**\r\n * Returns the applications version as defined in the `package.json`.\r\n * @return {number} The applications version.\r\n */\r\nfunction appVersion(): number | string {\r\n  var pkg = require('../../package.json');\r\n  return pkg.version;\r\n}\r\n\r\n/**\r\n * Returns the linting configuration to be used for `codelyzer`.\r\n * @return {string[]} The list of linting rules.\r\n */\r\nfunction customRules(): string[] {\r\n  var lintConf = require('../../tslint.json');\r\n  return lintConf.rulesDirectory;\r\n}\r\n\r\n/**\r\n * Returns the environment of the application.\r\n */\r\nfunction getEnvironment() {\r\n  let base: string[] = argv['_'];\r\n  let prodKeyword = !!base.filter(o => o.indexOf(ENVIRONMENTS.PRODUCTION) >= 0).pop();\r\n  let env = (argv['env'] || '').toLowerCase();\r\n  if ((base && prodKeyword) || env === ENVIRONMENTS.PRODUCTION) {\r\n    return ENVIRONMENTS.PRODUCTION;\r\n  } else {\r\n    return ENVIRONMENTS.DEVELOPMENT;\r\n  }\r\n}\r\n"]}