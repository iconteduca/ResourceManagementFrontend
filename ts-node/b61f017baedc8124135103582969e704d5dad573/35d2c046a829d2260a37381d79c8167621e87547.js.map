{"version":3,"file":"/home/admin/Programmi/resourceManagement/AISMfrontend/tools/utils/seed/code_change_tools.ts","sources":["/home/admin/Programmi/resourceManagement/AISMfrontend/tools/utils/seed/code_change_tools.ts"],"names":[],"mappings":";AAAA,IAAY,WAAW,WAAM,cAAc,CAAC,CAAA;AAG5C,uBAAmB,cAAc,CAAC,CAAA;AAKlC,IAAI,SAAS,GAAG;IACd,WAAW,CAAC,IAAI,CAAC,gBAAM,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC;AAKF,IAAI,MAAM,GAAG;IASX,SAAS,EAAE,CAAC;AACd,CAAC;AA2BQ,cAAM,UA3Bb;AAKF,IAAI,OAAO,GAAG,UAAC,KAAU;IACvB,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9B,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC;IAYC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAK9B,CAAC;AAEgB,eAAO,WAFtB;AAEyB","sourcesContent":["import * as browserSync from 'browser-sync';\r\n// import * as path from 'path';\r\n\r\nimport Config from '../../config';\r\n\r\n/**\r\n * Initialises BrowserSync with the configuration defined in seed.config.ts (or if overriden: project.config.ts).\r\n */\r\nlet runServer = () => {\r\n  browserSync.init(Config.getPluginConfig('browser-sync'));\r\n};\r\n\r\n/**\r\n * Runs BrowserSync as the listening process for the application.\r\n */\r\nlet listen = () => {\r\n  // if (ENABLE_HOT_LOADING) {\r\n  //   ng2HotLoader.listen({\r\n  //     port: HOT_LOADER_PORT,\r\n  //     processPath: file => {\r\n  //       return file.replace(join(PROJECT_ROOT, APP_SRC), join('dist', 'dev'));\r\n  //     }\r\n  //   });\r\n  // }\r\n  runServer();\r\n};\r\n\r\n/**\r\n * Provides a flag to mark which files have changed and reloads BrowserSync accordingly.\r\n */\r\nlet changed = (files: any) => {\r\n  if (!(files instanceof Array)) {\r\n    files = [files];\r\n  }\r\n\r\n  //  let onlyStylesChanged =\r\n  //    files\r\n  //      .map((f:string) => path.parse(f).ext)\r\n  //      .reduce((prev:string, current:string) => prev && (current === '.scss' || current === '.css'), true);\r\n  //\r\n  // if (ENABLE_HOT_LOADING) {\r\n  //   ng2HotLoader.onChange(files);\r\n  // } else {\r\n  //TODO: Figure out why you can't pass a file to reload\r\n  // if (onlyStylesChanged === false) {\r\n    browserSync.reload(files);\r\n  // } else {\r\n  //   browserSync.reload('*.css');\r\n  // }\r\n  //}\r\n};\r\n\r\nexport { listen, changed };\r\n"]}