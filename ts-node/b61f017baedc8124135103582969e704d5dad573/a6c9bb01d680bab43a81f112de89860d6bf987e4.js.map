{"version":3,"file":"/home/admin/Programmi/resourceManagement/AISMfrontend/tools/utils/seed/clean.ts","sources":["/home/admin/Programmi/resourceManagement/AISMfrontend/tools/utils/seed/clean.ts"],"names":[],"mappings":";AAAA,IAAY,IAAI,WAAM,WAAW,CAAC,CAAA;AAClC,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAMjC,eAAsB,KAAsB;IAC1C,MAAM,CAAC,UAAA,IAAI;QACT,IAAI,YAAsB,CAAC;QAC3B,EAAE,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC;YAC3B,YAAY,GAAG,KAAK,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,YAAY,GAAG,CAAS,KAAK,CAAC,CAAC;QACjC,CAAC;QAED,IAAI,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAA,CAAC;YAC/B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,MAAM,CAAC,CAAC,EAAE,UAAA,CAAC;oBACT,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC;oBACxC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;oBACpD,CAAC;oBACD,OAAO,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAM,OAAA,IAAI,EAAE,EAAN,CAAM,CAAC,CAAC;IAC3C,CAAC,CAAC;AACJ,CAAC;AAvBe,aAAK,QAuBpB,CAAA","sourcesContent":["import * as util from 'gulp-util';\r\nimport * as rimraf from 'rimraf';\r\n\r\n/**\r\n * Cleans the given path(s) using `rimraf`.\r\n * @param {string or string[]} paths - The path or list of paths to clean.\r\n */\r\nexport function clean(paths: string|string[]): (done: () => void) => void {\r\n  return done => {\r\n    let pathsToClean: string[];\r\n    if (paths instanceof Array) {\r\n      pathsToClean = paths;\r\n    } else {\r\n      pathsToClean = [<string>paths];\r\n    }\r\n\r\n    let promises = pathsToClean.map(p => {\r\n      return new Promise(resolve => {\r\n        rimraf(p, e => {\r\n          if (e) {\r\n            util.log('Clean task failed with', e);\r\n          } else {\r\n            util.log('Deleted', util.colors.yellow(p || '-'));\r\n          }\r\n          resolve();\r\n        });\r\n      });\r\n    });\r\n    Promise.all(promises).then(() => done());\r\n  };\r\n}\r\n\r\n"]}